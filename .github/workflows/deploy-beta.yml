name: Deploy to Beta environment

on:
  push:
    branches:
      - main

jobs:
  run-checks-and-deploy:
    runs-on: ubuntu-latest
    env:
      ALCHEMY_URL_BASE_SEPOLIA: ${{ secrets.ALCHEMY_URL_BASE_SEPOLIA }}
      DATABASE_SCHEMA: ${{ secrets.DATABASE_SCHEMA_BETA }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      # - name: Run the tests
      #   run: make test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: arn:aws:iam::130221856011:role/github-actions-role
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: orp-beta
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
          --build-arg DEPLOY_ENV=beta \
          --build-arg DATABASE_SCHEMA="$DATABASE_SCHEMA" \
          --build-arg ALCHEMY_URL_BASE_SEPOLIA="$ALCHEMY_URL_BASE_SEPOLIA" \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy new image to Amazon ECS
        run: |
          aws ecs update-service --cluster orp-cluster --service orp-service-beta --force-new-deployment

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
